[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "wazuh-virtual-machines"
dynamic = ["version"]
dependencies = [
    "pydantic",
    "paramiko",
    "pyyaml",
]
requires-python = ">= 3.12"
description = "Wazuh - Virtual Machines (OVA and AMI)"
license = {file = "LICENSE"}

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]

[tool.ruff]
line-length = 120
indent-width = 4
exclude = ["ova/"]

[project.urls]
Homepage = "https://wazuh.com/"
Documentation = "https://documentation.wazuh.com/current/index.html"
Repository = "https://github.com/wazuh/wazuh-virtual-machines"


[tool.ruff.lint]
select = [
    "E",    # pycodestyle
    "F",    # Pyflakes
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "SIM",  # flake8-simplify
    "I",    # isort
]
ignore = ["E501"]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[tool.coverage.run]
omit = [
    "*/tests/*",
    "*/__init__.py",
]

[tool.hatch.envs.dev]
description = """
Enviroment to be used for testing all virtual-machines modules
"""
dependencies = [
    "pytest~=8.0",
    "pytest-cov~=6.0",
    "pytest-xdist",
    "ruff",
    "requests",
]

[tool.hatch.envs.dev-provisioner]
description = """
Enviroment to be used for testing and developing the provisioner module
"""
template = "dev"

[tool.hatch.envs.dev-core-configurer]
description = """
Enviroment to be used for testing and developing the configurer module
"""
template = "dev"

[tool.hatch.envs.dev-ova-configurer]
description = """
Enviroment to be used for OVA Preconfigurer execution testing
"""
template = "dev"

[tool.hatch.envs.dev.scripts]
test-cov = "FORCE_COLOR=1 pytest -n 4 --cov=. --cov-report term-missing:skip-covered tests/ --cov-report=xml"
ruff-format = "ruff format ."
ruff-format-check = "ruff format --diff --check ."
ruff-lint-check = "ruff check --diff --unsafe-fixes ."
ruff-lint = "ruff check --fix --unsafe-fixes ."
run = "python -m main {args:}"
fix = ["ruff-format", "ruff-lint"] # The aim of this is to fix the code before pushing it to the repository. useful for local executions.
validate = [ # The aim of this is to validate the code before pushing it to the repository. Useful for when running workflows.
    "- ruff-format-check",
    "- ruff-lint-check",
    "- test-cov",
]

[tool.hatch.envs.dev-provisioner.scripts]
test-cov = "FORCE_COLOR=1 pytest -n 4 --cov=provisioner --cov-report term-missing:skip-covered tests/test_provisioner --cov-report=xml"
ruff-format = "ruff format provisioner tests/provisioner"
ruff-format-check = "ruff format --diff --check provisioner tests/provisioner"
ruff-lint-check = "ruff check --diff --unsafe-fixes provisioner tests/provisioner"
ruff-lint = "ruff check --fix --unsafe-fixes provisioner tests/provisioner"
run = "python -m main --execute provisioner {args:}"
# fix and validate are not defined here because they are inherited from the dev environment.

[tool.hatch.envs.dev-core-configurer.scripts]
test-cov = "FORCE_COLOR=1 pytest -n 4 --cov=configurer/core --cov-report term-missing:skip-covered tests/test_configurer/test_core --cov-report=xml"
ruff-format = "ruff format configurer/core"
ruff-format-check = "ruff format --diff --check configurer/core tests/configurer/core"
ruff-lint-check = "ruff check --diff --unsafe-fixes configurer/core tests/configurer/core"
ruff-lint = "ruff check --fix --unsafe-fixes configurer/core"
run = "python -m main --execute configurer {args:}"
# fix and validate are not defined here because they are inherited from the dev environment.

[tool.hatch.envs.dev-ova-configurer.scripts]
test-cov = "FORCE_COLOR=1 pytest -n 4 --cov=configurer/ova --cov-report term-missing:skip-covered tests/test_configurer/test_ova --cov-report=xml"
ruff-format = "ruff format configurer/ova"
ruff-format-check = "ruff format --diff --check configurer/ova"
ruff-lint-check = "ruff check --diff --unsafe-fixes configurer/ova"
ruff-lint = "ruff check --fix --unsafe-fixes configurer/ova"
fix = ["ruff-format", "ruff-lint"]
run = "python -m configurer.ova.ova_pre_configurer.ova_pre_configurer"
run-setup = "python -m configurer.ova.ova_pre_configurer.setup"