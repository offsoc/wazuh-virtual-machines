- hosts: all
  become: true

  tasks:
    - name: Enable Amazon Linux Extras repository
      amazon.aws.amazon_linux_extras:
        name: python3.8
        state: present
    
    - name: Install python3.8 and pip
      yum:
        name:
          - python3.8
          - python3-pip
        state: present

    - name: Configure Python 3.8 as default
      alternatives:
        name: python3
        path: /usr/bin/python3.8

    - name: Update all the packages
      yum:
        name: '*'
        state: latest

    - name: Install required tools for VirtualBox
      yum:
        name:
          - gcc
          - make
          - perl
          - bzip2
          - kernel-devel
          - kernel-headers
          - dkms
        state: present

    - name: Add the VirtualBox repository
      yum_repository:
        name: virtualbox
        description: "Oracle VirtualBox Repository"
        baseurl: https://download.virtualbox.org/virtualbox/rpm/el/7/x86_64
        gpgcheck: yes
        gpgkey: https://www.virtualbox.org/download/oracle_vbox.asc
        enabled: yes

    - name: Install VirtualBox
      yum:
        name: VirtualBox-7.0
        state: present

    - name: Rebuild the VirtualBox kernel modules
      command: "/sbin/vboxconfig"

    - name: Add Vagrant repository
      yum_repository:
        name: vagrant
        description: "HashiCorp Vagrant"
        baseurl: https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo
        gpgcheck: yes
        gpgkey: https://rpm.releases.hashicorp.com/gpg
        enabled: yes

    - name: Install Vagrant
      yum:
        name: vagrant
        state: present

    - name: Install git
      shell: sudo yum install -y git

    - name: Create directory for the base VM
      file:
        path: "/tmp/ova_directory"
        state: directory
        mode: '0755'

    - name: Download the Wazuh virtual machines repository
      git:
        repo: "{{ wvm_repository }}"
        version: "{{ wvm_branch }}"
        dest: "/tmp/wazuh-virtual-machines"
      register: clone_result
      retries: 6
      delay: 10
      until: clone_result is success

    - name: Create base box
      shell: "./generate_base_box.sh"
      args:
        chdir: "/tmp/wazuh-virtual-machines/ova/workflow_scripts"

    - name: Add the created box
      shell: "vagrant box add --name al2023 /tmp/wazuh-virtual-machines/ova/workflow_scripts/al2023.box"

    - name: Deploy the VM using Vagrant
      shell: "vagrant up"
      args:
        chdir: "/tmp/wazuh-virtual-machines/ova/workflow_scripts"
    
    # Migrate everything below to the Python script

    - name: Set custom hostname
      command: "hostnamectl set-hostname wazuh-server"

    - name: Build Wazuh installation assistant script
      command: "bash /tmp/{{ wia_scripts }}/builder.sh {{ builder_args }}"

    - name: Copy Wazuh installation assistant script to tmp dir
      command: "cp /tmp/{{ wia_scripts }}/wazuh-install.sh /tmp/wazuh-install.sh"

    - name: Run provision script
      command: "bash provision.sh {{ repository }} {{ debug }}"
      args:
        chdir: "{{ ova_path }}/ova"
      async: 3600
      poll: 10

    - name: Clean provision files
      file:
        path: /var/provision/
        state: absent

    - name: Clean Wazuh installation assistant resources
      file:
        path: /tmp/{{ wia_scripts }}
        state: absent

    - name: Clean Wazuh installation assistant script
      file:
        path: /tmp/wazuh-install.sh
        state: absent

    - name: Clean Wazuh installation assistant files
      file:
        path: /tmp/wazuh-install-files.tar
        state: absent

    - name: Clean logs
      shell: |
        find /var/log/ -type f -exec bash -c 'cat /dev/null > {}' \;
        find /var/ossec/logs -type f -execdir sh -c 'cat /dev/null > "$1"' _ {} \;
        find /var/log/wazuh-indexer -type f -execdir sh -c 'cat /dev/null > "$1"' _ {} \;
        find /var/log/filebeat -type f -execdir sh -c 'cat /dev/null > "$1"' _ {} \;
        rm -rf /var/log/wazuh-install.log

    - name: Clean history
      shell: cat /dev/null > ~/.bash_history && history -c

    - name: Clean YUM cache
      shell: |
        yum clean all
        rm -rf /var/cache/yum/*

    - name: Remove AuthorizedKeysCommand from sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?AuthorizedKeysCommand.*'
        state: absent

    - name: Remove AuthorizedKeysCommandUser from sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?AuthorizedKeysCommandUser.*'
        state: absent

    - name: Restart SSH service
      service:
        name: sshd
        state: restarted
